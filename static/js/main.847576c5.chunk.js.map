{"version":3,"sources":["components/Typing.jsx","components/Message.js","components/MessagesBlock.js","functions/firebase.js","functions/checkUserExist.js","App.js","serviceWorker.js","index.js"],"names":["Typing","e","typing","style","position","top","className","Message","date","Date","message","time","onClick","openMessageModal","sent","text","getHours","getMinutes","MessagesBlock","props","state","data","this","messages","length","map","v","key","max","Math","floor","random","stretched","React","Component","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","checkUserExists","id","a","newUserData","firestore","collection","doc","toString","get","then","r","exists","set","console","log","App","activeView","activePanel","userDataVK","userData","messageValue","popout","openPanel","bind","updateMessage","sendMessage","bridge","send","z","setState","x","listener","setTimeout","addMessage","panel","view","target","value","attachments","round","getTime","prevState","update","$","animate","scrollTop","document","height","focus","onClose","autoclose","mode","separator","left","window","history","back","right","color","status","before","size","src","fontWeight","display","margin","backgroundColor","vertical","width","onChange","maxLength","placeholder","disabled","caption","bottom","actions","paddingLeft","borderTop","borderBottom","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.847576c5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Typing = (e) => {\r\n    return (\r\n        <div>\r\n            {e.typing ? (\r\n                <div>\r\n                    <span style={{position: 'relative', top: 1}}>печатает</span>\r\n                    <div className=\"typing__loading Loading\">\r\n                        <div className=\"Loading__items\">\r\n                            <div className=\"Loading__item Loading__item_0\"></div>\r\n                            <div className=\"Loading__item Loading__item_1\"></div>\r\n                            <div className=\"Loading__item Loading__item_2\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <span>был в сети недавно</span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Typing;","import React from \"react\";\r\n\r\nconst Message = (e) => {\r\n    let date = new Date(e.message.time*1000);\r\n    return (\r\n        <div onClick={e.openMessageModal} className={`message ${e.message.sent ? 'sent' : 'received'}`}><span>{e.message.text}<div className=\"messageDate\">{date.getHours()+'.'+date.getMinutes()}</div></span></div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Placeholder} from \"@vkontakte/vkui\";\r\nimport Message from \"./Message\";\r\n\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nclass MessagesBlock extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.props.data;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.props.data.messages.length ?\r\n                    (<div className=\"messageWrap\"\r\n                          // style={{paddingTop: 'calc(100vh - 114px - '+this.props.data.messages.length*52+'px)'}}\r\n                    >\r\n                        <div className=\"messages\">\r\n                            {this.props.data.messages.map(v => <Message openMessageModal={this.props.openMessageModal} key={getRandomInt(26789)+v.text} message={v}/>)}\r\n                        </div>\r\n                    </div>) :\r\n                    (<Placeholder stretched><b>Пока нет сообщений</b><br/>Начните общаться!</Placeholder>)\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessagesBlock;","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCU3lAPlsxkBORPy2HQfCdayJNIIh0PrV4\",\r\n    authDomain: \"game1-cae49.firebaseapp.com\",\r\n    databaseURL: \"https://game1-cae49.firebaseio.com\",\r\n    projectId: \"game1-cae49\",\r\n    storageBucket: \"game1-cae49.appspot.com\",\r\n    messagingSenderId: \"691468574984\",\r\n    appId: \"1:691468574984:web:1c76454a2ec3020e820cbd\",\r\n    measurementId: \"G-1B23MNQTH4\"\r\n};\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default fire;","import fire from \"./firebase\";\r\nconst checkUserExists = async (id) => {\r\n    const newUserData = {\r\n        id: id,\r\n        messages: []\r\n    }\r\n    fire.firestore().collection('users').doc(id.toString()).get().then(\r\n        r => {\r\n            if(!r.exists){\r\n                fire.firestore().collection('users').doc(id.toString()).set(newUserData).then(\r\n                    r => console.log('Created user...')\r\n                );\r\n                return false;\r\n            }\r\n        }\r\n    );\r\n    return true;\r\n}\r\nexport default checkUserExists;","import React from 'react';\nimport './App.css';\nimport {\n    Panel,\n    PanelHeader,\n    PanelHeaderBack,\n    View,\n    Root,\n    SimpleCell,\n    PanelHeaderClose,\n    Header,\n    Button,\n    PanelHeaderButton,\n    PanelHeaderContent,\n    Avatar,\n    FixedLayout,\n    Div,\n    Separator,\n    Input,\n    Placeholder,\n    ActionSheet,\n    ActionSheetItem, Group, RichCell, HorizontalScroll, List\n} from \"@vkontakte/vkui\";\nimport Typing from \"./components/Typing\";\nimport MessagesBlock from \"./components/MessagesBlock\";\nimport '@vkontakte/vkui/dist/vkui.css';\nimport fire from './functions/firebase';\nimport checkUserExists from './functions/checkUserExist';\nimport bridge from '@vkontakte/vk-bridge';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Icon28PhoneOutline from '@vkontakte/icons/dist/28/phone_outline';\nimport Icon28AttachOutline from '@vkontakte/icons/dist/28/attach_outline';\nimport Icon24SmileOutline from '@vkontakte/icons/dist/24/smile_outline';\nimport Icon28VoiceOutline from '@vkontakte/icons/dist/28/voice_outline';\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\nimport Icon24Send from '@vkontakte/icons/dist/24/send';\nimport Icon24MoreVertical from '@vkontakte/icons/dist/24/more_vertical';\nimport Icon28MoneyTransferOutline from '@vkontakte/icons/dist/28/money_transfer_outline';\nimport Icon28GiftOutline from '@vkontakte/icons/dist/28/gift_outline';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\nimport Icon20HomeOutline from '@vkontakte/icons/dist/20/home_outline';\nimport Icon20Info from '@vkontakte/icons/dist/20/info';\n\nimport $ from 'jquery';\n\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeView: 'main',\n            activePanel: 'profile',\n            userDataVK: {},\n            userData: {},\n            messages: [],\n            typing: false,\n            messageValue: '',\n            popout: ''\n        };\n        this.openPanel = this.openPanel.bind(this);\n        this.updateMessage = this.updateMessage.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.openMessageModal = this.openMessageModal.bind(this);\n    }\n    componentDidMount() {\n        // fire.firestore().collection('users').doc('138597699').get().then(listener => {\n        //     this.setState({\n        //         userData: listener.data(),\n        //         messages: listener.data().messages\n        //     });\n        //     console.log(this.state);\n        // });\n        bridge.send(\"VKWebAppInit\", {})\n            .then(\n                r => bridge.send(\"VKWebAppGetUserInfo\", {})\n                    .then(\n                        z => {\n                            this.setState({\n                                userDataVK: z\n                            });\n                            checkUserExists(z.id).then(\n                                x => {\n                                    // fire.firestore().collection('users').doc(z.id.toString()).onSnapshot(listener => {\n                                    //     this.setState({\n                                    //         userData: listener.data(),\n                                    //         messages: listener.data().messages\n                                    //     });\n                                    //     console.log(this.state);\n                                    // });\n                                    fire.firestore().collection('users').doc(z.id.toString()).get().then(listener => {\n                                        this.setState({\n                                            userData: listener.data(),\n                                            messages: listener.data().messages\n                                        });\n                                        console.log(this.state);\n                                    });\n                                    if(!x){\n                                        setTimeout(() => {this.addMessage('Привет, давно тебя не было в уличных гонках! Заходи!', false, [])}, 1000);\n                                    }\n                                }\n                            );\n                        }\n                    )\n            );\n    }\n    componentWillUnmount() {\n\n    }\n    openPanel(panel){\n        this.setState({\n            activePanel: panel\n        })\n    }\n    openView(view){\n        this.setState({\n            activeView: view\n        })\n    }\n    updateMessage(e){\n        this.setState({\n            messageValue: e.target.value\n        })\n    }\n    addMessage(text, sent, attachments){\n        let time = Math.round(new Date().getTime()/1000);\n        // console.log(time);\n        if(!sent){\n            setTimeout(() => {\n                this.setState({\n                    typing: true\n                });\n                setTimeout(() => {\n                    this.setState(prevState => ({\n                        messages: [...prevState.messages, {text: text, sent: sent, attachments: attachments, time: time}],\n                        typing: false\n                    }))\n                }, 2000);\n            }, 1000)\n        }\n        else{\n            this.setState(prevState => ({\n                messages: [...prevState.messages, {text: text, sent: sent, attachments: attachments, time: time}],\n                messageValue: ''\n            }));\n        }\n        setTimeout(() => {fire.firestore().collection('users').doc(\n            this.state.userDataVK.id.toString()\n            //'138597699'\n        ).update({messages: this.state.messages});}, 3500);\n        $(\"html, body\").animate({ scrollTop: $(document).height() }, \"slow\");\n    }\n    sendMessage(){\n        this.addMessage(this.state.messageValue, true, []);\n        $('.messageInput').focus();\n    }\n    openMessageModal () {\n        this.setState({ popout:\n                <ActionSheet onClose={() => this.setState({ popout: null })}>\n                    <ActionSheetItem autoclose>\n                        Ответить\n                    </ActionSheetItem>\n                    <ActionSheetItem autoclose>\n                        Переслать\n                    </ActionSheetItem>\n                    <ActionSheetItem autoclose>\n                        Копировать\n                    </ActionSheetItem>\n                    <ActionSheetItem autoclose>\n                        Удалить\n                    </ActionSheetItem>\n                    <ActionSheetItem autoclose>\n                        Редактировать\n                    </ActionSheetItem>\n                    <ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>\n                </ActionSheet>\n        });\n    }\n    render() {\n        return (\n            <Root activeView={this.state.activeView}>\n                <View popout={this.state.popout} id=\"main\" activePanel={this.state.activePanel}>\n                    <Panel id=\"main\">\n                        <PanelHeader\n                            className=\"messagesHeader\"\n                            separator={false}\n                            left={<PanelHeaderButton onClick={() => {window.history.back()}}><Icon28ArrowLeftOutline/></PanelHeaderButton>}\n                            right={<PanelHeaderButton><Icon28PhoneOutline style={{color: 'var(--button_muted_foreground)'}}/></PanelHeaderButton>}\n                            //style={{boxShadow: '0px 1px 5px 0px rgba(0, 0, 0, 0.3)'}}\n                        >\n                            <PanelHeaderContent onClick={() => {this.openPanel('profile')}}\n                                status={<Typing typing={this.state.typing}/>}\n                                before={<Avatar size={36} src=\"https://vk.com/images/camera_100.png\" />}\n                            >\n                                <span style={{fontWeight: \"bold\"}}>DELETED<Icon16Dropdown style={{color: 'var(--attach_picker_tab_inactive_icon)', display: \"inline-block\", margin: \"4px 0 0 3px\"}}/></span>\n                            </PanelHeaderContent>\n                        </PanelHeader>\n                        <MessagesBlock openMessageModal={this.openMessageModal} data={this.state}/>\n                        <FixedLayout style={{backgroundColor: '#FFFFFF'}} vertical=\"bottom\">\n                            <Separator/>\n                            <Div>\n                                <Icon28AttachOutline width={28} height={28} style={{color: 'var(--attach_picker_tab_inactive_icon)', display: \"inline-block\"}}/>\n                                <input value={this.state.messageValue} onChange={this.updateMessage} maxLength={32} className=\"messageInput\" placeholder=\"Сообщение\"/>\n                                <Icon24SmileOutline width={28} height={28} style={{color: 'var(--attach_picker_tab_inactive_icon)', display: \"inline-block\", margin: \"0 5px\"}}/>\n                                {this.state.messageValue ? (<Icon24Send onClick={this.sendMessage} className=\"iconChangeable\" width={28} height={28} style={{color: 'var(--accent)', display: \"inline-block\"}}/>) : (<Icon28VoiceOutline className=\"iconChangeable\" width={28} height={28} style={{color: 'var(--attach_picker_tab_inactive_icon)', display: \"inline-block\"}}/>)}\n                            </Div>\n                        </FixedLayout>\n                    </Panel>\n                    <Panel id=\"profile\">\n                        <PanelHeader\n                            left={<PanelHeaderButton onClick={() => {this.openPanel('main')}}><Icon28ArrowLeftOutline/></PanelHeaderButton>}\n                            right={<PanelHeaderButton><Icon24MoreVertical width={28} height={28} style={{color: 'var(--button_muted_foreground)'}}/></PanelHeaderButton>}\n                            >\n                            DELETED\n                        </PanelHeader>\n                        <Group>\n                            <RichCell\n                                disabled\n                                before={<Avatar size={72} src={'https://vk.com/images/camera_100.png'} />}\n                                caption={<span>был в сети недавно</span>}\n                                text=\"хуй нюзай\"\n                                bottom={<div/>}\n                                actions={<div/>}\n                                style={{paddingLeft: 20}}\n                            >\n                                <b>DELETED</b>\n                            </RichCell>\n                            <div style={{display: 'flex'}}>\n                                <Button style={{margin: '0 10px 0 20px', width: '50%'}}>Сообщение</Button>\n                                <Button style={{margin: '0 20px 0 10px', width: '50%'}}>Добавить в друзья</Button>\n                            </div>\n                            <HorizontalScroll>\n                                <div className=\"userActions\">\n                                    <div><Icon28PhoneOutline/>Звонок</div>\n                                    <div><Icon28MoneyTransferOutline/>Перевод</div>\n                                    <div><Icon28GiftOutline/>Подарок</div>\n                                    <div><Icon28Notifications/>Уведомления</div>\n                                </div>\n                            </HorizontalScroll>\n                            <Separator/>\n                            <ul className=\"userRows\">\n                                <li><Icon20HomeOutline width={16} height={16}/><span>Город: Ы</span></li>\n                                <li style={{color: 'var(--accent)', fontWeight: 'bold'}}><Icon20Info width={16} height={16}/><span>Подробная информация</span></li>\n                            </ul>\n                            <div style={{height: 5, borderTop: '1px solid var(--separator_common)', borderBottom: '1px solid var(--separator_common)', backgroundColor: 'var(--search_bar_field_background)'}}/>\n                            <Header mode=\"secondary\">1 запись</Header>\n                            <Separator/>\n                        </Group>\n                    </Panel>\n                </View>\n                <div id=\"scrollTo\"/>\n            </Root>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}