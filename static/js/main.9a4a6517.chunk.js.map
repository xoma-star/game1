{"version":3,"sources":["functions/firebase.js","functions/checkUserExist.js","functions/getParams.js","App.js","serviceWorker.js","index.js","img/pv.png"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","checkUserExists","id","a","newUserData","warPoints","firestore","collection","doc","toString","get","then","r","exists","set","console","log","window","location","reload","getParams","parameterName","result","tmp","search","substr","split","forEach","item","decodeURIComponent","App","props","state","activeView","activePanel","VK_UID","userData","popout","modal","snackbar","activeTab","activeTabOwner","first_name","last_name","photo_200","points","name","value","lat","lon","owner","background","description","openPanel","bind","markerClick","openCaptureModal","this","setState","bridge","send","onSnapshot","listener","data","main","panel","view","marker","e","$","addClass","v","num","mapProps","map","setOptions","styles","onReady","removeIcons","style","width","height","google","zoom","streetViewControl","mapTypeControl","scaleControl","fullscreenControl","zoomControl","initialCenter","lng","key","title","onClick","position","icon","url","pivo","removeClass","backgroundImage","backgroundAttachment","backgroundClip","backgroundPosition","backgroundRepeat","backgroundSize","className","before","size","src","React","Component","GoogleApiWrapper","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.9a4a6517.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCU3lAPlsxkBORPy2HQfCdayJNIIh0PrV4\",\r\n    authDomain: \"game1-cae49.firebaseapp.com\",\r\n    databaseURL: \"https://game1-cae49.firebaseio.com\",\r\n    projectId: \"game1-cae49\",\r\n    storageBucket: \"game1-cae49.appspot.com\",\r\n    messagingSenderId: \"691468574984\",\r\n    appId: \"1:691468574984:web:1c76454a2ec3020e820cbd\",\r\n    measurementId: \"G-1B23MNQTH4\"\r\n};\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default fire;","import fire from \"./firebase\";\r\nconst checkUserExists = async (id) => {\r\n    const newUserData = {\r\n        id: id,\r\n        warPoints: 0\r\n    };\r\n    fire.firestore().collection('users').doc(id.toString()).get().then(\r\n        r => {\r\n            if(!r.exists){\r\n                fire.firestore().collection('users').doc(id.toString()).set(newUserData).then(\r\n                    r => {console.log('Created user...'); window.location.reload()}\r\n                );\r\n            }\r\n        }\r\n    );\r\n};\r\nexport default checkUserExists;","const getParams = (parameterName) => {\r\n    let result = null,\r\n        tmp = [];\r\n    // eslint-disable-next-line\r\n    location.search\r\n        .substr(1)\r\n        .split(\"&\")\r\n        .forEach(function (item) {\r\n            tmp = item.split(\"=\");\r\n            if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\r\n        });\r\n    return result;\r\n}\r\nexport default getParams;","import React from 'react';\nimport './App.css';\nimport {\n    Panel,\n    View,\n    Root, Header, PanelHeader,ModalRoot, ModalPage, ModalPageHeader, PanelHeaderButton, PanelHeaderBack, Div, SimpleCell, Avatar\n} from \"@vkontakte/vkui\";\nimport '@vkontakte/vkui/dist/vkui.css';\nimport fire from './functions/firebase';\nimport checkUserExists from './functions/checkUserExist';\nimport bridge from '@vkontakte/vk-bridge';\nimport $ from 'jquery';\nimport getParams from './functions/getParams';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport pivo from './img/pv.png';\n\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeView: 'main',\n            activePanel: 'main',\n            VK_UID: 0,\n            userData: {\n                id: 0,\n                warPoints: 0\n            },\n            popout: '',\n            modal: '',\n            snackbar: '',\n            activeTab: 0,\n            activeTabOwner: {\n                first_name: '',\n                last_name: '',\n                photo_200: ''\n            },\n            points: [\n                {\n                    name: 'Пятачок',\n                    value: 5,\n                    lat: 54.791769,\n                    lon: 56.086817,\n                    owner: 0,\n                    background: 'https://firebasestorage.googleapis.com/v0/b/game1-cae49.appspot.com/o/inorsBG%2F%D0%BF%D1%8F%D1%82%D0%B0%D0%BA.png?alt=media&token=e27c9707-bdb0-4dcf-96ec-586d00fea6eb',\n                    description: 'ауе'\n                }\n                // {\n                //     name: 'Сахар',\n                //     value: 5,\n                //     lat: 54.778748,\n                //     lon: 56.123970,\n                //     owner: 0,\n                //     background: 'https://firebasestorage.googleapis.com/v0/b/game1-cae49.appspot.com/o/inorsBG%2F%D1%81%D0%B0%D1%85%D0%B0%D1%80.png?alt=media&token=7b51e43e-16b3-4dc3-aaad-24ebb8caaad3',\n                //     description: 'Сижки поштучно'\n                // }\n            ]\n        };\n        this.openPanel = this.openPanel.bind(this);\n        this.markerClick = this.markerClick.bind(this);\n        this.openCaptureModal = this.openCaptureModal.bind(this);\n    }\n    componentDidMount() {\n        this.setState({VK_UID: getParams('vk_user_id')});\n        bridge.send(\"VKWebAppInit\", {}).then(() => console.log('ВК ПОДКЛЮЧЕН'));\n        checkUserExists(getParams('vk_user_id')).then(\n            () => {\n                fire.firestore().collection('users').doc(getParams('vk_user_id').toString()).onSnapshot(listener => {\n                    this.setState({\n                        userData: listener.data()\n                    });\n                });\n                fire.firestore().collection('data').doc('points').onSnapshot(listener => {\n                    this.setState({\n                        points: listener.data().main\n                    });\n                });\n            }\n        );\n    }\n    componentWillUnmount() {\n\n    }\n    openPanel(panel){\n        this.setState({\n            activePanel: panel\n        })\n    }\n    openView(view){\n        this.setState({\n            activeView: view\n        })\n    }\n    markerClick(props, marker, e){\n        $('#layout').addClass('active');\n        bridge.send(\"VKWebAppGetUserInfo\", {}).then(\n            v => this.setState({\n                activeTab: props.num,\n                activeTabOwner: v\n            })\n        );\n    }\n    removeIcons(mapProps, map){\n        const style =\n            [\n                {\n                    \"elementType\": \"labels\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"off\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"administrative.land_parcel\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"off\"\n                        }\n                    ]\n                },\n                {\n                    \"featureType\": \"administrative.neighborhood\",\n                    \"stylers\": [\n                        {\n                            \"visibility\": \"off\"\n                        }\n                    ]\n                }\n            ];\n        map.setOptions({\n            styles: style\n        });\n    }\n    openCaptureModal(data){\n\n    }\n\n    render() {\n        return (\n            <Root activeView={this.state.activeView}>\n                <View popout={this.state.popout} id=\"main\" activePanel={this.state.activePanel}>\n                    <Panel id=\"main\">\n                        <PanelHeader>\n                            ВОЙНА ЗА ИНОРС\n                        </PanelHeader>\n                            <span>{this.state.userData.warPoints}</span>\n                        <Map\n                            onReady={(mapProps, map) => this.removeIcons(mapProps, map)}\n                            style={{width: '100%', height: 500}}\n                            google={this.props.google}\n                            zoom={14}\n                            streetViewControl={false}\n                            mapTypeControl={false}\n                            scaleControl={false}\n                            fullscreenControl={false}\n                            zoomControl={false}\n                            initialCenter={{\n                                lat: 54.779270,\n                                lng: 56.123964\n                            }}\n                        >\n                            {this.state.points.map(value =>\n                                <Marker\n                                    key={value.name+value.lat}\n                                    num={value.id}\n                                    title={value.name}\n                                    name={value.name}\n                                    background={value.background}\n                                    description={value.description}\n                                    onClick={this.markerClick}\n                                    position={\n                                        {lat: value.lat,\n                                        lng: value.lon}\n                                    }\n                                    icon={{\n                                        url: pivo\n                                    }}\n                                />\n                            )}\n                        </Map>\n                        <div onClick={() => {$('#layout').removeClass('active')}} id=\"layout\">\n                            <div id=\"layoutBG\" style={{backgroundImage: 'url('+this.state.points[this.state.activeTab].background+')', width: '100%', height: '30vh', backgroundAttachment: 'scroll', backgroundClip: 'border-box', backgroundPosition: 'center', backgroundRepeat: 'no-repeat', backgroundSize: 'cover'}}/>\n                            <Header className=\"layoutName\">{this.state.points[this.state.activeTab].name}</Header>\n                            <Div className=\"layoutDescription\">{this.state.points[this.state.activeTab].description}</Div>\n                            <SimpleCell before={<Avatar size={48} src={this.state.activeTabOwner.photo_200} />} description=\"Владелец\">{this.state.activeTabOwner.first_name+' '+this.state.activeTabOwner.last_name}</SimpleCell>\n                        </div>\n                        {this.state.snackbar}\n                    </Panel>\n                </View>\n            </Root>\n        );\n    }\n}\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyC2L8vPYtDn5Csq-7Gj9sZqSzvb3Bx1QfI\")\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pv.910d5316.png\";"],"sourceRoot":""}