{"version":3,"sources":["img/wh.png","img/UMPO.png","functions/firebase.js","functions/checkUserExist.js","functions/getParams.js","components/MapMain.js","const/economy.js","components/areaData/groupMain.js","const/mapStyle.js","const/polygon.js","components/areaData/groupPolitics.js","components/areaData/groupActions.js","components/UserHeaderContent.js","components/NotifSnack.js","functions/getUnix.js","functions/timeFormat.js","functions/areasUpdate.js","functions/usersUpdate.js","functions/check0100.js","functions/eventToPush.js","functions/getRand.js","components/DiversionPanel.js","components/areaData/groupHistrory.js","components/SpeechPanel.js","components/LawsPanel.js","components/TradePanel.js","components/ProductionPanel.js","components/WarehousePanel.js","App.js","serviceWorker.js","index.js","img/pv.png"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","checkUserExists","id","a","newUserData","warPoints","lastTaken","Date","points","firestore","collection","doc","toString","get","then","r","exists","set","console","log","window","location","reload","getParams","parameterName","result","tmp","search","substr","split","forEach","item","decodeURIComponent","MapMain","p","areas","length","users","polygons","polyToDraw","i","k","lat","lng","onReady","mapProps","map","removeIcons","google","zoom","className","streetViewControl","mapTypeControl","scaleControl","fullscreenControl","zoomControl","onBoundsChanged","onDragged","initialCenter","center","v","onClick","polyClick","paths","key","owner","color","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","economy","AreaGroupMain","activeArea","curArea","header","mode","before","size","src","photo_200","after","description","first_name","last_name","name","happiness","value","approval","width","height","style","display","population","AreaGroupPolitics","AreaGroupActions","content","expandable","openPanel","contentOwner","parseInt","UserHeaderContent","user","offshores","area","NotifSnack","layout","onClose","closeSnackbar","good","backgroundColor","fill","message","getUnix","timeFormat","areasUpdate","update","main","usersUpdate","check0100","eventToPush","t","n","et","ev","type","num","date","effect","actor","getRand","min","max","Math","floor","random","DiversionPanel","props","diversionOffset","state","snackbar","diversion","bind","openSnackbar","this","setState","g","m","e","prices","lastDiversion","q","w","s","events","push","z","x","timeStamp","minutes","getMinutes","hours","getHours","left","multiline","React","Component","AreaGroupHistory","eventTypes","icon","types","speech","months","reverse","time","getDate","getMonth","SpeechPanel","lastSpeech","divSpeech","LawsPanel","h","TradePanel","ProductionPanel","sliderVal","selectVal","pushProduction","updateSelect","prodObj","count","ready","production","splice","target","step","Number","onChange","top","margin","disabled","placeholder","marginTop","click","collectProd","WarehousePanel","App","activeView","activePanel","VK_UID","userData","popout","modal","contextOpened","openCaptureModal","toggleContext","bridge","send","catch","dataCol","onSnapshot","listener","data","d","Object","entries","join","access_token","re","response","panel","view","setOptions","styles","mapStyle","$","css","aside","transform","status","opened","markerClick","GoogleApiWrapper","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.76b8c984.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wh.59a4c6da.png\";","module.exports = __webpack_public_path__ + \"static/media/UMPO.53770ec2.png\";","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCU3lAPlsxkBORPy2HQfCdayJNIIh0PrV4\",\r\n    authDomain: \"game1-cae49.firebaseapp.com\",\r\n    databaseURL: \"https://game1-cae49.firebaseio.com\",\r\n    projectId: \"game1-cae49\",\r\n    storageBucket: \"game1-cae49.appspot.com\",\r\n    messagingSenderId: \"691468574984\",\r\n    appId: \"1:691468574984:web:1c76454a2ec3020e820cbd\",\r\n    measurementId: \"G-1B23MNQTH4\"\r\n};\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport default fire;","import fire from \"./firebase\";\r\nconst checkUserExists = async (id) => {\r\n    const newUserData = {\r\n        id: id,\r\n        warPoints: 0,\r\n        lastTaken: + new Date(),\r\n        points: []\r\n    };\r\n    fire.firestore().collection('users').doc(id.toString()).get().then(\r\n        r => {\r\n            if(!r.exists){\r\n                fire.firestore().collection('users').doc(id.toString()).set(newUserData).then(\r\n                    r => {console.log('СОЗДАН ПОЛЬЗОВАТЕЛЬ'); window.location.reload()}\r\n                );\r\n            }\r\n        }\r\n    );\r\n};\r\nexport default checkUserExists;","const getParams = (parameterName) => {\r\n    let result = null,\r\n        tmp = [];\r\n    // eslint-disable-next-line\r\n    location.search\r\n        .substr(1)\r\n        .split(\"&\")\r\n        .forEach(function (item) {\r\n            tmp = item.split(\"=\");\r\n            if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\r\n        });\r\n    return result;\r\n}\r\nexport default getParams;","import {Map, Marker, Polygon} from \"google-maps-react\";\r\nimport warehouse from \"../img/wh.png\";\r\nimport pivo from \"../img/pv.png\";\r\nimport React from \"react\";\r\nimport UMPO from '../img/UMPO.png';\r\nimport {ScreenSpinner} from \"@vkontakte/vkui\";\r\n\r\nconst MapMain = (p) => {\r\n    if(!(p.areas.length && p.users['U1'])){\r\n        return <ScreenSpinner/>;\r\n    }\r\n    let polygons = p.polygons;\r\n\r\n    let polyToDraw = [];\r\n    for (let i = 0; i < polygons.length; i++){\r\n        polyToDraw[i] = [];\r\n        for (let k = 0; k < polygons[i].length; k++){\r\n            polyToDraw[i][k] = {lat: 0, lng: 0};\r\n            polyToDraw[i][k].lat = polygons[i][k][0];\r\n            polyToDraw[i][k].lng = polygons[i][k][1];\r\n        }\r\n    }\r\n    return (\r\n        <Map\r\n            onReady={(mapProps, map) => p.removeIcons(mapProps, map)}\r\n            google={p.google}\r\n            zoom={p.zoom}\r\n            className=\"map\"\r\n            streetViewControl={false}\r\n            mapTypeControl={false}\r\n            scaleControl={false}\r\n            fullscreenControl={false}\r\n            zoomControl={false}\r\n            onBoundsChanged={p.onDragged}\r\n            initialCenter={p.center}\r\n        >\r\n            {polyToDraw.map((v, i) => {\r\n                return (\r\n                    <Polygon\r\n                        onClick={() => {p.polyClick(i)}}\r\n                        paths={v}\r\n                        key={\"poly\"+v[0].lat+' '+v[1].lng+p.users['U'+p.areas[i].owner].color}\r\n                        strokeColor=\"#000000\"\r\n                        strokeOpacity={0.8}\r\n                        strokeWeight={0.5}\r\n                        fillColor={p.users['U'+p.areas[i].owner].color}\r\n                        fillOpacity={0.35} />\r\n                );\r\n            })}\r\n\r\n            {/*<Marker*/}\r\n            {/*    num={1488}*/}\r\n            {/*    title=\"Склад певка\"*/}\r\n            {/*    name=\"Склад певка\"*/}\r\n            {/*    background=\"\"*/}\r\n            {/*    description=\"\"*/}\r\n            {/*    taken=\"0\"*/}\r\n            {/*    onClick={p.markerClick}*/}\r\n            {/*    position={*/}\r\n            {/*        {lat: 54.777251,*/}\r\n            {/*            lng: 56.127483}*/}\r\n            {/*    }*/}\r\n            {/*    icon={{*/}\r\n            {/*        url: warehouse,*/}\r\n            {/*        // eslint-disable-next-line no-undef*/}\r\n            {/*        anchor: new google.maps.Point(32,32),*/}\r\n            {/*        // eslint-disable-next-line no-undef*/}\r\n            {/*        scaledSize: new google.maps.Size(32,32)*/}\r\n            {/*    }}*/}\r\n            {/*/>*/}\r\n            {/*<Marker*/}\r\n            {/*    num={1337}*/}\r\n            {/*    title=\"РАБота\"*/}\r\n            {/*    name=\"УМПО\"*/}\r\n            {/*    background=\"\"*/}\r\n            {/*    description=\"\"*/}\r\n            {/*    taken=\"0\"*/}\r\n            {/*    onClick={p.markerClick}*/}\r\n            {/*    position={*/}\r\n            {/*        {lat: 54.788578,*/}\r\n            {/*            lng: 56.131215}*/}\r\n            {/*    }*/}\r\n            {/*    icon={{*/}\r\n            {/*        url: UMPO,*/}\r\n            {/*        // eslint-disable-next-line no-undef*/}\r\n            {/*        anchor: new google.maps.Point(64,32),*/}\r\n            {/*        // eslint-disable-next-line no-undef*/}\r\n            {/*        scaledSize: new google.maps.Size(64,32)*/}\r\n            {/*    }}*/}\r\n            {/*/>*/}\r\n            {/*{p.points.map(value =>*/}\r\n            {/*    <Marker*/}\r\n            {/*        key={value.name+value.lat}*/}\r\n            {/*        num={value.id}*/}\r\n            {/*        id={value.id}*/}\r\n            {/*        title={value.name}*/}\r\n            {/*        name={value.name}*/}\r\n            {/*        background={value.background}*/}\r\n            {/*        description={value.description}*/}\r\n            {/*        taken={value.taken}*/}\r\n            {/*        onClick={p.markerClick}*/}\r\n            {/*        position={*/}\r\n            {/*            {lat: value.lat,*/}\r\n            {/*                lng: value.lon}*/}\r\n            {/*        }*/}\r\n            {/*        icon={{*/}\r\n            {/*            url: pivo*/}\r\n            {/*        }}*/}\r\n            {/*    />*/}\r\n            {/*)}*/}\r\n        </Map>\r\n    )\r\n}\r\n\r\nexport default MapMain;","const economy = [\r\n    'Пивко',\r\n    'Семки',\r\n    'Сижки',\r\n    'Водочка',\r\n    'Насик',\r\n    'Краденные велосипеды',\r\n    'Краденные мобилки',\r\n    'Калики',\r\n    'Чак-Чак',\r\n    'Бак-беляш'\r\n];\r\n\r\nexport default economy;","import {Avatar, Group, Header, Progress, SimpleCell} from \"@vkontakte/vkui\";\r\nimport pivo from \"../../img/pv.png\";\r\nimport React from \"react\";\r\nimport economy from \"../../const/economy\";\r\n\r\nimport Icon28MessageOutline from '@vkontakte/icons/dist/28/message_outline';\r\nimport Icon28SmileOutline from '@vkontakte/icons/dist/28/smile_outline';\r\nimport Icon36MoneyCircleOutline from '@vkontakte/icons/dist/36/money_circle_outline';\r\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline';\r\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline';\r\nimport Icon28SortHorizontalOutline from '@vkontakte/icons/dist/28/sort_horizontal_outline';\r\nimport Icon28LikeOutline from '@vkontakte/icons/dist/28/like_outline';\r\n\r\nconst AreaGroupMain = (p) => {\r\n    let activeArea = p.areas[p.curArea];\r\n    let owner = p.users['U'+p.areas[p.curArea].owner];\r\n    return (\r\n    <Group header={<Header mode=\"secondary\">Информация</Header>}>\r\n        <SimpleCell\r\n            before={<Avatar size={48} src={owner.photo_200} />}\r\n            after={<Icon28MessageOutline />}\r\n            description=\"управляет районом\">{`${owner.first_name} ${owner.last_name}`}\r\n        </SimpleCell>\r\n        <SimpleCell\r\n            before={<Icon28SmileOutline/>}\r\n            description=\"уровень счастья\"\r\n        >\r\n            <Progress key={activeArea.name+'distrhappi'+activeArea.happiness} value={activeArea.happiness}/>\r\n        </SimpleCell>\r\n        <SimpleCell\r\n            before={<Icon28LikeOutline/>}\r\n            description=\"поддержка власти\"\r\n        >\r\n            <Progress key={activeArea.name+'d_approval'+activeArea.approval} value={activeArea.approval}/>\r\n        </SimpleCell>\r\n        <SimpleCell\r\n            before={<Icon36MoneyCircleOutline width={28} height={28}/>}\r\n            description=\"ВВП\"\r\n            style={{display: 'none'}}\r\n        >\r\n            {activeArea.happiness*activeArea.population/100}\r\n        </SimpleCell>\r\n        <SimpleCell\r\n            before={<Icon28CubeBoxOutline/>}\r\n            description=\"тип экономики\"\r\n        >\r\n            {economy[activeArea.economy]}\r\n        </SimpleCell>\r\n        <SimpleCell\r\n            style={{display: 'none'}}\r\n            before={<Icon28SortHorizontalOutline/>}\r\n            description=\"контракты\"\r\n        >\r\n            53\r\n        </SimpleCell>\r\n        <SimpleCell\r\n            before={<Icon28Users3Outline/>}\r\n            description=\"население\"\r\n        >\r\n            {activeArea.population} тыс.\r\n        </SimpleCell>\r\n    </Group>)\r\n}\r\n\r\nexport default AreaGroupMain;","const style =\r\n    [\r\n        {\r\n            \"elementType\": \"labels\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"off\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"administrative.land_parcel\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"off\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"administrative.neighborhood\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"off\"\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n\r\nexport default style;","const polygons = [\r\n    [\r\n        [54.779493, 56.124385],\r\n        [54.779497, 56.131224],\r\n        [54.776341, 56.131215],\r\n        [54.776348, 56.124403]\r\n    ],\r\n    [\r\n        [54.781021, 56.124396],\r\n        [54.781036, 56.131236],\r\n        [54.779497, 56.131224],\r\n        [54.779493, 56.124385]\r\n    ],\r\n    [\r\n        [54.785005, 56.124335],\r\n        [54.785039, 56.124738],\r\n        [54.785051, 56.125118],\r\n        [54.785528, 56.125112],\r\n        [54.785721, 56.125202],\r\n        [54.785853, 56.125454],\r\n        [54.786095, 56.126215],\r\n        [54.786116, 56.131269],\r\n        [54.781036, 56.131236],\r\n        [54.781021, 56.124396],\r\n        [54.783463, 56.12439]\r\n    ],\r\n    [\r\n        [54.788083, 56.121598],\r\n        [54.788085, 56.131268],\r\n        [54.786116, 56.131269],\r\n        [54.786095, 56.126215],\r\n        [54.785853, 56.125454],\r\n        [54.785721, 56.125202],\r\n        [54.785528, 56.125112],\r\n        [54.785051, 56.125118],\r\n        [54.785039, 56.124738],\r\n        [54.785005, 56.124335],\r\n        [54.785419, 56.124109],\r\n        [54.785716, 56.123839],\r\n        [54.786556, 56.122793],\r\n        [54.787478, 56.121806]\r\n    ],\r\n    [\r\n        [54.788085, 56.131268],\r\n        [54.788090, 56.138701],\r\n        [54.787969, 56.138726],\r\n        [54.787872, 56.138638],\r\n        [54.787739, 56.138423],\r\n        [54.787534, 56.138267],\r\n        [54.787422, 56.138271],\r\n        [54.787310, 56.138139],\r\n        [54.787207, 56.138088],\r\n        [54.786705, 56.138104],\r\n        [54.786612, 56.138182],\r\n        [54.786502, 56.138185],\r\n        [54.786435, 56.138273],\r\n        [54.781320, 56.138272],\r\n        [54.781204, 56.138015],\r\n        [54.781135, 56.137899],\r\n        [54.781022, 56.137387],\r\n        [54.781036, 56.131236]\r\n    ],\r\n    [\r\n        [54.776348, 56.124403],\r\n        [54.776341, 56.131215],\r\n        [54.775451, 56.131214],\r\n        [54.775371, 56.131147],\r\n        [54.775293, 56.130954],\r\n        [54.774989, 56.130881],\r\n        [54.774843, 56.130696],\r\n        [54.774628, 56.130616],\r\n        [54.773699, 56.130516],\r\n        [54.773455, 56.131214],\r\n        [54.773055, 56.131289],\r\n        [54.772976, 56.130860],\r\n        [54.772956, 56.129272],\r\n        [54.773206, 56.127888],\r\n        [54.773471, 56.127201],\r\n        [54.773810, 56.126584],\r\n        [54.774408, 56.125915],\r\n        [54.774385, 56.125840],\r\n        [54.774392, 56.124427]\r\n    ],\r\n    [\r\n        [54.780110, 56.116825],\r\n        [54.780185, 56.117445],\r\n        [54.780169, 56.124392],\r\n        [54.774392, 56.124427],\r\n        [54.774246, 56.121350],\r\n        [54.773549, 56.117302],\r\n        [54.773503, 56.116494],\r\n        [54.773547, 56.115505],\r\n        [54.773647, 56.114637],\r\n        [54.773814, 56.113825],\r\n        [54.774018, 56.113179],\r\n        [54.774138, 56.112975],\r\n        [54.774406, 56.112635],\r\n        [54.775800, 56.113590]\r\n    ],\r\n    [\r\n        [54.783401, 56.121429],\r\n        [54.783411, 56.122845],\r\n        [54.783463, 56.124390],\r\n        [54.780169, 56.124392],\r\n        [54.780179, 56.121533],\r\n        [54.780351, 56.121501],\r\n        [54.781185, 56.121410],\r\n        [54.781570, 56.121394]\r\n    ],\r\n    [\r\n        [54.783423, 56.115530],\r\n        [54.783421, 56.116032],\r\n        [54.783406, 56.116767],\r\n        [54.783399, 56.117089],\r\n        [54.783412, 56.118041],\r\n        [54.783410, 56.119827],\r\n        [54.783401, 56.121429],\r\n        [54.78157, 56.121394],\r\n        [54.781185, 56.12141],\r\n        [54.780351, 56.121501],\r\n        [54.780179, 56.121533],\r\n        [54.780185, 56.117445],\r\n        [54.78011, 56.116825],\r\n        [54.780063, 56.116583],\r\n        [54.780050, 56.115524]\r\n    ],\r\n    [\r\n        [54.780024, 56.112637],\r\n        [54.780035, 56.113903],\r\n        [54.78005, 56.115524],\r\n        [54.780063, 56.116583],\r\n        [54.78011, 56.116825],\r\n        [54.7758, 56.11359],\r\n        [54.774406, 56.112635],\r\n        [54.774390, 56.111932],\r\n        [54.774399, 56.111720],\r\n        [54.774440, 56.111479],\r\n        [54.774584, 56.111010],\r\n        [54.775041, 56.109647],\r\n        [54.774897, 56.109436],\r\n        [54.774889, 56.109296],\r\n        [54.774936, 56.109133],\r\n        [54.775397, 56.108206],\r\n        [54.775899, 56.107353],\r\n        [54.776538, 56.106487],\r\n        [54.777265, 56.106672],\r\n        [54.777663, 56.106938],\r\n        [54.777868, 56.106967],\r\n        [54.778242, 56.106967],\r\n        [54.778576, 56.107238],\r\n        [54.778652, 56.107482],\r\n        [54.778627, 56.107721],\r\n        [54.778875, 56.108131],\r\n        [54.778954, 56.108587],\r\n        [54.779057, 56.109094],\r\n        [54.779165, 56.109505],\r\n        [54.779291, 56.110143],\r\n        [54.779410, 56.110763],\r\n        [54.779543, 56.111265],\r\n        [54.779607, 56.111497],\r\n        [54.779770, 56.111620],\r\n        [54.779881, 56.111878],\r\n        [54.779988, 56.112170]\r\n    ],\r\n    [\r\n        [54.785809, 56.115501],\r\n        [54.785955, 56.118246],\r\n        [54.786925, 56.119222],\r\n        [54.787296, 56.119897],\r\n        [54.787597, 56.120338],\r\n        [54.787660, 56.120319],\r\n        [54.787730, 56.119954],\r\n        [54.788112, 56.120155],\r\n        [54.788083, 56.121598],\r\n        [54.787478, 56.121806],\r\n        [54.786556, 56.122793],\r\n        [54.785716, 56.123839],\r\n        [54.785419, 56.124109],\r\n        [54.785005, 56.124335],\r\n        [54.783463, 56.12439],\r\n        [54.783411, 56.122845],\r\n        [54.783401, 56.121429],\r\n        [54.78341, 56.119827],\r\n        [54.783412, 56.118041],\r\n        [54.783399, 56.117089],\r\n        [54.783421, 56.116032],\r\n        [54.783423, 56.11553],\r\n        [54.784622, 56.115512]\r\n    ]\r\n];\r\n\r\nexport default polygons;","import {Group, Header, SimpleCell} from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\nimport Icon36MoneyCircleOutline from '@vkontakte/icons/dist/36/money_circle_outline';\r\n\r\nconst AreaGroupPolitics = (p) => {\r\n    return (<Group header={<Header mode=\"secondary\">Политики</Header>}>\r\n        <SimpleCell\r\n            before={<Icon36MoneyCircleOutline width={28} height={28}/>}\r\n            description=\"налоги\"\r\n        >\r\n            20%\r\n        </SimpleCell>\r\n    </Group>)\r\n}\r\n\r\nexport default AreaGroupPolitics;","import {Group, Header, SimpleCell} from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\nimport getParams from \"../../functions/getParams\";\r\n\r\nimport Icon28SortHorizontalOutline from '@vkontakte/icons/dist/28/sort_horizontal_outline';\r\nimport Icon28DocumentOutline from '@vkontakte/icons/dist/28/document_outline';\r\nimport Icon28AdvertisingOutline from '@vkontakte/icons/dist/28/advertising_outline';\r\nimport Icon28BombOutline from '@vkontakte/icons/dist/28/bomb_outline';\r\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\r\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline';\r\n\r\nconst AreaGroupActions = (p) => {\r\n    let activeArea = p.areas[p.curArea];\r\n    let content =\r\n    <Group header={<Header mode=\"secondary\">Взаимодействие</Header>}>\r\n        <SimpleCell\r\n            expandable={true}\r\n            before={<Icon28SortHorizontalOutline/>}\r\n            onClick={() => {p.openPanel('trade')}}\r\n        >\r\n            Торговля\r\n        </SimpleCell>\r\n        <SimpleCell\r\n            expandable={true}\r\n            before={<Icon28AdvertisingOutline/>}\r\n        >\r\n            Пропаганда\r\n        </SimpleCell>\r\n        <SimpleCell\r\n            expandable={true}\r\n            before={<Icon28BombOutline/>}\r\n            onClick={() => {p.openPanel('diversion')}}\r\n        >\r\n            Диверсия\r\n        </SimpleCell>\r\n    </Group>;\r\n    let contentOwner = (\r\n        <Group header={<Header mode=\"secondary\">Управление</Header>}>\r\n            <SimpleCell\r\n                expandable={true}\r\n                before={<Icon28DocumentOutline/>}\r\n                onClick={() => {p.openPanel('laws')}}\r\n            >\r\n                Законы\r\n            </SimpleCell>\r\n            <SimpleCell\r\n                expandable={true}\r\n                before={<Icon28SettingsOutline/>}\r\n                onClick={() => {p.openPanel('production')}}\r\n            >\r\n                Производство\r\n            </SimpleCell>\r\n            <SimpleCell\r\n                expandable={true}\r\n                before={<Icon28CubeBoxOutline/>}\r\n                onClick={() => {p.openPanel('warehouse')}}\r\n            >\r\n                Склад\r\n            </SimpleCell>\r\n            <SimpleCell\r\n                expandable={true}\r\n                before={<Icon28AdvertisingOutline/>}\r\n                onClick={() => {p.openPanel('speech')}}\r\n            >\r\n                Выступить с речью\r\n            </SimpleCell>\r\n            <SimpleCell\r\n                expandable={true}\r\n                before={<Icon28SortHorizontalOutline/>}\r\n                onClick={() => {p.openPanel('trade')}}\r\n            >\r\n                Торговля\r\n            </SimpleCell>\r\n        </Group>\r\n    );\r\n    if(activeArea.owner === parseInt(getParams('vk_user_id'))){\r\n        return contentOwner;\r\n    }\r\n    return content;\r\n\r\n}\r\n\r\nexport default AreaGroupActions;","import {Avatar, List, SimpleCell} from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\n\r\nimport Icon28MoneyCircleOutline from '@vkontakte/icons/dist/28/money_circle_outline';\r\nimport Icon28LocationOutline from '@vkontakte/icons/dist/28/location_outline';\r\n\r\nconst UserHeaderContent = (p) => {\r\n    let owner = p.user;\r\n    return <List>\r\n        <SimpleCell\r\n            before={<Avatar size={48} src={owner.photo_200} />}\r\n            description=\"лучший управляющий?\">{`${owner.first_name} ${owner.last_name}`}\r\n        </SimpleCell>\r\n        <SimpleCell\r\n            before={<Icon28MoneyCircleOutline/>}\r\n            description=\"счет в Швейцарии\"\r\n        >\r\n            {owner.offshores}\r\n        </SimpleCell>\r\n        <SimpleCell onClick={() => {p.polyClick(owner.area)}} before={<Icon28LocationOutline/>}>\r\n            {'Управление '+p.areas[owner.area].name}\r\n        </SimpleCell>\r\n    </List>\r\n}\r\n\r\nexport default UserHeaderContent;","import {Avatar, Snackbar} from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\n\r\nconst NotifSnack = (p) => {\r\n    let blueBackground = {backgroundColor: 'var(--accent)'};\r\n    let redBackground = {backgroundColor: 'var(--dynamic_red)'};\r\n    return <Snackbar\r\n        key={+new Date()}\r\n        layout=\"vertical\"\r\n        onClose={() => p.closeSnackbar}\r\n        before={<Avatar size={24} style={p.good ? blueBackground : redBackground}>\r\n            {p.good ? <Icon16Done fill=\"#fff\" width={14} height={14} />\r\n                :<Icon24Error fill=\"#fff\" width={14} height={14}/>\r\n            }\r\n\r\n        </Avatar>}\r\n    >\r\n        {p.message}\r\n    </Snackbar>\r\n}\r\n\r\nexport default NotifSnack;","import bridge from \"@vkontakte/vk-bridge\";\r\n\r\nconst getUnix = () => {\r\n    return parseInt(+new Date()/1000);\r\n    bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7446907, \"scope\": \"\"}).then(\r\n        v => bridge.send(\"VKWebAppCallAPIMethod\", {\"method\": \"utils.getServerTime\", \"request_id\": \"5524\", \"params\": {\"v\":\"5.110\", \"access_token\":v.access_token}}).then(\r\n            v => {return v.response;}\r\n        )\r\n    );\r\n}\r\nexport default getUnix;","const timeFormat = (v) => {\r\n    if(v < 10){\r\n        v = `0${v}`\r\n    }\r\n    return v;\r\n}\r\n\r\nexport default timeFormat;","import fire from \"./firebase\";\r\n\r\nconst areasUpdate = (p) => {\r\n    fire.firestore().collection('data').doc('areas').update({main: p}).then(() => {console.log('обновлены данные территорий')});\r\n}\r\n\r\nexport default areasUpdate;","import fire from \"./firebase\";\r\n\r\nconst usersUpdate = (p) => {\r\n    fire.firestore().collection('data').doc('users').update({main: p}).then(() => {console.log('обновлены данные пользователей')});\r\n}\r\n\r\nexport default usersUpdate;","const check0100 = (v) => {\r\n    if(v > 100){\r\n        v = 100;\r\n    }\r\n    if(v < 0){\r\n        v = 0;\r\n    }\r\n    return v;\r\n}\r\n\r\nexport default check0100;","import getParams from \"./getParams\";\r\nimport getUnix from \"./getUnix\";\r\n\r\nconst eventToPush = (t,n,et,ev) => {\r\n    return {\r\n        type: t,\r\n        num: n,\r\n        date: getUnix(),\r\n        effect: {\r\n            type: et,\r\n            value: ev\r\n        },\r\n        actor: getParams('vk_user_id')\r\n    }\r\n}\r\n\r\nexport default eventToPush;","const getRand = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n}\r\n\r\nexport default getRand;","import React from \"react\";\r\nimport {Group, PanelHeader, PanelHeaderBack, SimpleCell} from \"@vkontakte/vkui\";\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport NotifSnack from \"./NotifSnack\";\r\nimport getParams from \"../functions/getParams\";\r\nimport getUnix from \"../functions/getUnix\";\r\nimport timeFormat from \"../functions/timeFormat\";\r\nimport areasUpdate from \"../functions/areasUpdate\";\r\nimport usersUpdate from \"../functions/usersUpdate\";\r\nimport check0100 from \"../functions/check0100\";\r\nimport eventToPush from \"../functions/eventToPush\";\r\nimport getRand from \"../functions/getRand\";\r\n\r\n\r\nclass DiversionPanel extends React.Component{\r\n    diversionOffset = 60*10;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbar: ''\r\n        }\r\n        this.diversion = this.diversion.bind(this);\r\n        this.closeSnackbar = this.closeSnackbar.bind(this);\r\n        this.openSnackbar = this.openSnackbar.bind(this);\r\n    }\r\n    closeSnackbar(){\r\n        this.setState({ snackbar: null })\r\n    }\r\n    openSnackbar(g,m){\r\n        this.setState({\r\n            snackbar: <NotifSnack closeSnackbar={this.closeSnackbar} good={g} message={m}/>\r\n        });\r\n    }\r\n    diversion(e){\r\n        let timeStamp = getUnix();\r\n        let lastDiversion = this.props.user.lastDiversion;\r\n        const prices = [20000];\r\n        if(timeStamp - lastDiversion < this.diversionOffset){\r\n            this.openSnackbar(false, 'Диверсии можно проводить раз в 10 минут');\r\n            return 0;\r\n        }\r\n        if(this.props.user.offshores - prices[e] < 0){\r\n            this.openSnackbar(false, 'Недостаточно средств на счету');\r\n            return 0;\r\n        }\r\n        let q = this.props.areas;\r\n        let w = q[this.props.curArea];\r\n        // eslint-disable-next-line default-case\r\n        switch (e) {\r\n            case 0:\r\n                if(getRand(0,2) > 0){\r\n                    let s = getRand(1,5);\r\n                    w.happiness -= s;\r\n                    w.events.push(eventToPush('diversion', 0, 'happiness', -s));\r\n                    this.openSnackbar(true, `Уровень счастья снижен на ${s}`);\r\n                }\r\n                else{\r\n                    this.openSnackbar(false, 'Диверсия провалилась');\r\n                }\r\n                break;\r\n        }\r\n        w.happiness = check0100(w.happiness);\r\n        q[this.props.curArea] = w;\r\n\r\n        let z = this.props.users;\r\n        let x = this.props.user;\r\n\r\n        x.lastDiversion = getUnix();\r\n        x.offshores -= prices[e];\r\n        z['U'+getParams('vk_user_id')] = x;\r\n\r\n        areasUpdate(q);\r\n        usersUpdate(z);\r\n    }\r\n    render() {\r\n        let timeStamp = getUnix();\r\n        let lastDiversion = this.props.user.lastDiversion;\r\n        let date = new Date(lastDiversion*1000+this.diversionOffset*1000);\r\n\r\n        let minutes = timeFormat(date.getMinutes());\r\n        let hours = timeFormat(date.getHours());\r\n\r\n        return (\r\n            <div>\r\n                <PanelHeader\r\n                    left={<PanelHeaderBack onClick={() => {this.props.openPanel('area')}}/>}\r\n                >\r\n                    Диверсии\r\n                </PanelHeader>\r\n                <Group description=\"диверсии могут снижать одобрение власти и уровень счастья, но и сами управляющие могут получить от них выгоду, списав свои неудачи на внешнее вмешательство.\r\n                диверсии организуются за шв. франки. никто же не хочет оставлять следы.\">\r\n                    <SimpleCell multiline={true} style={timeStamp - lastDiversion > this.diversionOffset ? {display: 'none'} : {}} before={<Icon24Error width={28} height={28}/>}>\r\n                        {`Новая диверсия доступна в ${hours}:${minutes}`}\r\n                    </SimpleCell>\r\n                    <SimpleCell\r\n                        onClick={() => {this.diversion(0)}}\r\n                        before={<Icon24Flash width={28} height={28}/>}\r\n                        expandable={true}\r\n                        description=\"20.000 шв. франков\"\r\n                    >Перекусить кабели</SimpleCell>\r\n                </Group>\r\n                {this.state.snackbar}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DiversionPanel;","import {Group, Header, Placeholder, SimpleCell} from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\n\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error'\r\nimport Icon56InfoOutline from '@vkontakte/icons/dist/56/info_outline';\r\nimport Icon28AdvertisingOutline from '@vkontakte/icons/dist/28/advertising_outline';\r\n\r\nimport timeFormat from \"../../functions/timeFormat\";\r\n\r\nconst AreaGroupHistory = (p) => {\r\n    let activeArea = p.areas[p.curArea];\r\n    const eventTypes = {\r\n        diversion: {\r\n            name: 'Диверсия',\r\n            icon: <Icon24Error/>,\r\n            types: ['перерезать кабели']\r\n        },\r\n        speech: {\r\n            name: 'Речь',\r\n            icon: <Icon28AdvertisingOutline width={24} height={24}/>,\r\n            types: ['свалить вину на диверсии']\r\n        }\r\n    }\r\n    const months = ['янв', 'фев', 'мар', 'апр', 'мая', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'];\r\n    return (\r\n        <Group header={<Header mode=\"secondary\">События</Header>}>\r\n            {activeArea.events.length ?\r\n                activeArea.events.reverse().map(\r\n                    v => {\r\n                        let date = new Date(v.date*1000);\r\n                        let minutes = timeFormat(date.getMinutes());\r\n                        let hours = timeFormat(date.getHours());\r\n\r\n                        let time = `${date.getDate()} ${months[date.getMonth()]} ${hours}:${minutes}`\r\n\r\n                        return (\r\n                            <SimpleCell\r\n                                before={eventTypes[v.type].icon}\r\n                                description={time}>\r\n                                {`${eventTypes[v.type].name}: ${eventTypes[v.type].types[v.num]}`}\r\n                            </SimpleCell>\r\n                        )\r\n                    }\r\n                ) : <Placeholder\r\n                    icon={<Icon56InfoOutline/>}\r\n                    header=\"Событий пока нет\"\r\n                >\r\n                    Как только на этой территории что-то произойдет,<br/>\r\n                    оно отразится здесь\r\n                </Placeholder>\r\n\r\n            }\r\n        </Group>)\r\n}\r\n\r\nexport default AreaGroupHistory;","import React from \"react\";\r\nimport {Group, PanelHeader, PanelHeaderBack, SimpleCell} from \"@vkontakte/vkui\";\r\nimport NotifSnack from \"./NotifSnack\";\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport fire from \"../functions/firebase\";\r\nimport getParams from \"../functions/getParams\";\r\nimport getRand from \"../functions/getRand\";\r\nimport usersUpdate from \"../functions/usersUpdate\";\r\nimport areasUpdate from \"../functions/areasUpdate\";\r\nimport eventToPush from \"../functions/eventToPush\";\r\nimport check0100 from \"../functions/check0100\";\r\nimport getUnix from \"../functions/getUnix\";\r\nimport timeFormat from \"../functions/timeFormat\";\r\n\r\nclass SpeechPanel extends React.Component{\r\n    diversionOffset = 60*30;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbar: ''\r\n        }\r\n        this.diversion = this.diversion.bind(this);\r\n        this.closeSnackbar = this.closeSnackbar.bind(this);\r\n        this.openSnackbar = this.openSnackbar.bind(this);\r\n    }\r\n    closeSnackbar(){\r\n        this.setState({ snackbar: null })\r\n    }\r\n    openSnackbar(g,m){\r\n        this.setState({\r\n            snackbar: <NotifSnack closeSnackbar={this.closeSnackbar} good={g} message={m}/>\r\n        });\r\n    }\r\n    diversion(e){\r\n        let timeStamp = getUnix();\r\n        let lastDiversion = this.props.user.lastSpeech;\r\n        if(timeStamp - lastDiversion < this.diversionOffset){\r\n            this.openSnackbar(false, 'Речь можно произносить раз в 30 минут');\r\n            return 0;\r\n        }\r\n        let q = this.props.areas;\r\n        let w = q[this.props.curArea];\r\n        // eslint-disable-next-line default-case\r\n        switch (e) {\r\n            case 0:\r\n                if(getRand(0,4) > 0){\r\n                    let s = getRand(1,5);\r\n                    w.approval += s;\r\n                    w.events.push(eventToPush('speech', 0, 'approval', s));\r\n                    this.openSnackbar(true, `Уровень поддержки повышен на ${s}`);\r\n                }\r\n                else{\r\n                    this.openSnackbar(false, 'Речь никого не впечатлила');\r\n                }\r\n                break;\r\n        }\r\n        w.approval = check0100(w.approval);\r\n        w.happiness = check0100(w.happiness);\r\n        q[this.props.curArea] = w;\r\n\r\n        let z = this.props.users;\r\n        let x = this.props.user;\r\n\r\n        x.lastSpeech = getUnix();\r\n        z['U'+getParams('vk_user_id')] = x;\r\n\r\n        areasUpdate(q);\r\n        usersUpdate(z);\r\n    }\r\n    render() {\r\n        let timeStamp = getUnix();\r\n        let lastDiversion = this.props.user.lastSpeech;\r\n        let date = new Date(lastDiversion*1000+this.diversionOffset*1000);\r\n\r\n        let minutes = timeFormat(date.getMinutes());\r\n        let hours = timeFormat(date.getHours());\r\n\r\n\r\n        let divSpeech = (this.props.areas[this.props.curArea].events.length !== 0);\r\n        if(divSpeech){\r\n            divSpeech = this.props.areas[this.props.curArea].events[this.props.areas[this.props.curArea].events.length - 1].type === 'diversion';\r\n        }\r\n        else{\r\n            divSpeech = false;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <PanelHeader\r\n                    left={<PanelHeaderBack onClick={() => {this.props.openPanel('area')}}/>}\r\n                >\r\n                    Выступить с речью\r\n                </PanelHeader>\r\n                <Group description=\"произнесите воодушевляющую речь, которая может поднять настроение и укрепить ваши позиции, а может и наоборот. в общем, следите за базаром\">\r\n                    <SimpleCell multiline={true} style={timeStamp - lastDiversion > this.diversionOffset ? {display: 'none'} : {}} before={<Icon24Error width={28} height={28}/>}>\r\n                        {`Произнести следующую речь можно в ${hours}:${minutes}`}\r\n                    </SimpleCell>\r\n                    <SimpleCell\r\n                        onClick={() => {this.diversion(0)}}\r\n                        before={<Icon24Flash width={28} height={28}/>}\r\n                        expandable={true}\r\n                        style={!divSpeech ? {display: 'none'} : {}}\r\n                    >Свалить все на диверсии</SimpleCell>\r\n                </Group>\r\n                {this.state.snackbar}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SpeechPanel;","import React from \"react\";\r\nimport {Group, PanelHeader, PanelHeaderBack, Placeholder, SimpleCell} from \"@vkontakte/vkui\";\r\nimport NotifSnack from \"./NotifSnack\";\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport getParams from \"../functions/getParams\";\r\nimport getRand from \"../functions/getRand\";\r\nimport usersUpdate from \"../functions/usersUpdate\";\r\nimport areasUpdate from \"../functions/areasUpdate\";\r\nimport eventToPush from \"../functions/eventToPush\";\r\nimport check0100 from \"../functions/check0100\";\r\nimport getUnix from \"../functions/getUnix\";\r\nimport timeFormat from \"../functions/timeFormat\";\r\nimport Icon56RecentOutline from '@vkontakte/icons/dist/56/recent_outline';\r\n\r\nclass LawsPanel extends React.Component{\r\n    diversionOffset = 60*30;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbar: ''\r\n        }\r\n        this.diversion = this.diversion.bind(this);\r\n        this.closeSnackbar = this.closeSnackbar.bind(this);\r\n        this.openSnackbar = this.openSnackbar.bind(this);\r\n    }\r\n    closeSnackbar(){\r\n        this.setState({ snackbar: null })\r\n    }\r\n    openSnackbar(g,m){\r\n        this.setState({\r\n            snackbar: <NotifSnack closeSnackbar={this.closeSnackbar} good={g} message={m}/>\r\n        });\r\n    }\r\n    diversion(e){\r\n        let q = this.props.areas;\r\n        let w = q[this.props.curArea];\r\n\r\n        w.approval = check0100(w.approval);\r\n        w.happiness = check0100(w.happiness);\r\n\r\n        areasUpdate(q);\r\n    }\r\n    render() {\r\n        let h = (new Date()).getHours();\r\n        if(h >= 12 && h < 13){\r\n            return (\r\n                <div>\r\n                    <PanelHeader\r\n                        left={<PanelHeaderBack onClick={() => {this.props.openPanel('area')}}/>}\r\n                    >\r\n                        Законы\r\n                    </PanelHeader>\r\n                    <Group description=\"законы определяют направление развития района. правильное их сочетание быстро выведет к доминации.\">\r\n\r\n                        <SimpleCell\r\n                            onClick={() => {this.diversion(0)}}\r\n                            before={<Icon24Flash width={28} height={28}/>}\r\n                            expandable={true}\r\n                        >Свалить все на диверсии</SimpleCell>\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return <div>\r\n                <PanelHeader\r\n                    left={<PanelHeaderBack onClick={() => {this.props.openPanel('area')}}/>}\r\n                >\r\n                    Закрыто\r\n                </PanelHeader>\r\n                <Placeholder\r\n                    icon={<Icon56RecentOutline/>}\r\n                    header=\"Закрыто\"\r\n                >\r\n                    Принимать законы можно с 12 до 13 часов\r\n                </Placeholder>\r\n            </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default LawsPanel;","import React from \"react\";\r\nimport {Group, Header, PanelHeader, PanelHeaderBack, Placeholder, SimpleCell} from \"@vkontakte/vkui\";\r\nimport NotifSnack from \"./NotifSnack\";\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport getParams from \"../functions/getParams\";\r\nimport getRand from \"../functions/getRand\";\r\nimport usersUpdate from \"../functions/usersUpdate\";\r\nimport areasUpdate from \"../functions/areasUpdate\";\r\nimport eventToPush from \"../functions/eventToPush\";\r\nimport check0100 from \"../functions/check0100\";\r\nimport getUnix from \"../functions/getUnix\";\r\nimport timeFormat from \"../functions/timeFormat\";\r\nimport Icon56RecentOutline from '@vkontakte/icons/dist/56/recent_outline';\r\nimport economy from \"../const/economy\";\r\n\r\nclass TradePanel extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbar: ''\r\n        }\r\n        this.diversion = this.diversion.bind(this);\r\n        this.closeSnackbar = this.closeSnackbar.bind(this);\r\n        this.openSnackbar = this.openSnackbar.bind(this);\r\n    }\r\n    closeSnackbar(){\r\n        this.setState({ snackbar: null })\r\n    }\r\n    openSnackbar(g,m){\r\n        this.setState({\r\n            snackbar: <NotifSnack closeSnackbar={this.closeSnackbar} good={g} message={m}/>\r\n        });\r\n    }\r\n    diversion(e){\r\n\r\n    }\r\n    render() {\r\n        let h = (new Date()).getHours();\r\n        if(h >= 8 && h < 22){\r\n            return (\r\n                <div>\r\n                    <PanelHeader\r\n                        left={<PanelHeaderBack onClick={() => {this.props.openPanel('area')}}/>}\r\n                    >\r\n                        Торговая площадка\r\n                    </PanelHeader>\r\n                    <Group header={<Header mode=\"secondary\">Купить</Header>}>\r\n                        {economy.map((v,i) => {\r\n                            return <SimpleCell\r\n                                key={`buy${i}`}\r\n                                onClick={() => {this.diversion(i)}}\r\n                                before={<Icon24Flash width={28} height={28}/>}\r\n                                expandable={true}\r\n                                description={`мин. цена 42`}\r\n                            >{v}</SimpleCell>\r\n                        })}\r\n                    </Group>\r\n                    {this.state.snackbar}\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return <div>\r\n                <PanelHeader\r\n                    left={<PanelHeaderBack onClick={() => {this.props.openPanel('area')}}/>}\r\n                >\r\n                    Закрыто\r\n                </PanelHeader>\r\n                <Placeholder\r\n                    icon={<Icon56RecentOutline/>}\r\n                    header=\"Закрыто\"\r\n                >\r\n                    Торговая площадка работает с 8 по 22\r\n                </Placeholder>\r\n            </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default TradePanel;","import React from \"react\";\r\nimport {\r\n    Button, Div,\r\n    Group,\r\n    Header, Input,\r\n    PanelHeader,\r\n    PanelHeaderBack, Progress, Select,\r\n    SimpleCell,\r\n    Slider\r\n} from \"@vkontakte/vkui\";\r\nimport NotifSnack from \"./NotifSnack\";\r\nimport areasUpdate from \"../functions/areasUpdate\";\r\nimport check0100 from \"../functions/check0100\";\r\nimport Icon28MoonOutline from '@vkontakte/icons/dist/28/moon_outline';\r\nimport Icon28CheckCircleOutline from '@vkontakte/icons/dist/28/check_circle_outline';\r\nimport Icon32Spinner from '@vkontakte/icons/dist/32/spinner';\r\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline';\r\nimport economy from \"../const/economy\";\r\nimport getUnix from \"../functions/getUnix\";\r\nimport timeFormat from \"../functions/timeFormat\";\r\n\r\nclass ProductionPanel extends React.Component{\r\n    diversionOffset = 60*30;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            snackbar: '',\r\n            sliderVal: 1,\r\n            selectVal: 0\r\n        }\r\n        this.pushProduction = this.pushProduction.bind(this);\r\n        this.closeSnackbar = this.closeSnackbar.bind(this);\r\n        this.openSnackbar = this.openSnackbar.bind(this);\r\n        this.updateSelect = this.updateSelect.bind(this);\r\n    }\r\n    closeSnackbar(){\r\n        this.setState({ snackbar: null })\r\n    }\r\n    openSnackbar(g,m){\r\n        this.setState({\r\n            snackbar: <NotifSnack closeSnackbar={this.closeSnackbar} good={g} message={m}/>\r\n        });\r\n    }\r\n    diversion(e){\r\n        let q = this.props.areas;\r\n        let w = q[this.props.curArea];\r\n\r\n        w.approval = check0100(w.approval);\r\n        w.happiness = check0100(w.happiness);\r\n\r\n        areasUpdate(q);\r\n    }\r\n    pushProduction(){\r\n        const prodTime = [\r\n            1,\r\n            2,\r\n            3,\r\n            4,\r\n            6,\r\n            7,\r\n            3,\r\n            2,\r\n            7,\r\n            5\r\n        ];\r\n        let prodObj = {\r\n            count: this.state.sliderVal,\r\n            type: this.state.selectVal,\r\n            ready: getUnix() + this.state.sliderVal*prodTime[this.state.selectVal]*10\r\n        }\r\n\r\n        let q = this.props.areas;\r\n        let w = q[this.props.curArea];\r\n        if(w.production.length >= 5){\r\n            this.openSnackbar(false, 'Все ячейки заняты');\r\n            return;\r\n        }\r\n        w.production.push(prodObj);\r\n        q[this.props.curArea] = w;\r\n        areasUpdate(q);\r\n    }\r\n    collectProd(i){\r\n        let q = this.props.areas;\r\n        q[this.props.curArea].production.splice(i,1);\r\n        areasUpdate(q);\r\n    }\r\n    updateSelect(e){\r\n        this.setState({\r\n            selectVal: e.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PanelHeader\r\n                    left={<PanelHeaderBack onClick={() => {this.props.openPanel('area')}}/>}\r\n                >\r\n                    Производство\r\n                </PanelHeader>\r\n                <Group description=\"производите товары и продавайте их на торговой площадке. также некоторая продукция повышает поддержку власти и настрой жителей\">\r\n                    <Div>\r\n                        <Slider\r\n                            step={1}\r\n                            min={1}\r\n                            max={100}\r\n                            value={Number(this.state.sliderVal)}\r\n                            onChange={v => {this.setState({sliderVal: v})}}\r\n                            top=\"Кол-во товара\"\r\n                        />\r\n                        <Input style={{margin: '15px 0'}} value={this.state.sliderVal} disabled/>\r\n                        <Select value={this.state.selectVal} onChange={this.updateSelect} placeholder=\"Выберите продукцию\">\r\n                            {economy.map((v,i) => {\r\n                                return (\r\n                                    <option value={i}>{v}</option>\r\n                                )\r\n                            })}\r\n                        </Select>\r\n                        <Button onClick={this.pushProduction} style={{marginTop: 15}} size=\"xl\">В очередь</Button>\r\n                    </Div>\r\n                </Group>\r\n                <Group header={<Header mode=\"secondary\">Очередь</Header>}>\r\n                    {this.props.areas[this.props.curArea].production.map((v, i) => {\r\n                        let before, description, click;\r\n                        if(getUnix() - v.ready <= 0){\r\n                            before = <Icon32Spinner width={28} height={28}/>;\r\n                            let date = new Date(v.ready*1000);\r\n                            let minutes = timeFormat(date.getMinutes());\r\n                            let hours = timeFormat(date.getHours());\r\n                            description = `будет готово в ${hours}:${minutes}`;\r\n                            click = () => {return false;};\r\n                        }\r\n                        else{\r\n                            before = <Icon28CheckCircleOutline/>;\r\n                            description = 'нажмите, чтобы собрать';\r\n                            click = () => {this.collectProd(i)}\r\n                        }\r\n                        return (\r\n                            <SimpleCell onClick={click} key={v.ready+description} description={description} before={before}>\r\n                                {`${economy[v.type]} (${v.count})`}\r\n                            </SimpleCell>\r\n                        )\r\n                    })}\r\n                    {/*<SimpleCell before={<Icon32Spinner width={28} height={28}/>} description=\"Будет готово в 42.12\">*/}\r\n                    {/*    Производится*/}\r\n                    {/*</SimpleCell>*/}\r\n                    {/*<SimpleCell before={<Icon28MoonOutline/>}>*/}\r\n                    {/*    Пустая ячейка*/}\r\n                    {/*</SimpleCell>*/}\r\n                </Group>\r\n                {/*<Group style={{display: 'none'}} header={<Header mode=\"secondary\">Склад</Header>}>*/}\r\n                {/*    <SimpleCell*/}\r\n                {/*        before={<Icon28CubeBoxOutline/>}*/}\r\n                {/*        description={<Progress value={24}/>}*/}\r\n                {/*    >*/}\r\n                {/*        Заполненность склада: 240/1000*/}\r\n                {/*    </SimpleCell>*/}\r\n                {/*    <Div>*/}\r\n                {/*        <Button onClick={() => {this.props.openPanel('trade')}} size=\"xl\">Отправить на торговую площадку</Button>*/}\r\n                {/*    </Div>*/}\r\n                {/*</Group>*/}\r\n                {this.state.snackbar}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductionPanel;","import React from \"react\";\r\nimport economy from \"../const/economy\";\r\nimport {PanelHeader, PanelHeaderBack, Progress, SimpleCell} from \"@vkontakte/vkui\";\r\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline';\r\n\r\nconst WarehousePanel = (p) => {\r\n    return (\r\n        <div>\r\n            <PanelHeader left={<PanelHeaderBack/>}>\r\n                Склад\r\n            </PanelHeader>\r\n            {economy.map(v => {\r\n                return (\r\n                <SimpleCell key={v} before={<Icon28CubeBoxOutline/>} description={<Progress value={24}/>}>\r\n                    {v}\r\n                </SimpleCell>\r\n                )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WarehousePanel;","import React from 'react';\nimport './App.css';\nimport {\n    Panel,\n    View,\n    Root,\n    PanelHeader,\n    PanelHeaderBack, PanelHeaderContent, PanelHeaderContext\n} from \"@vkontakte/vkui\";\nimport '@vkontakte/vkui/dist/vkui.css';\nimport fire from './functions/firebase';\nimport checkUserExists from './functions/checkUserExist';\nimport bridge from '@vkontakte/vk-bridge';\nimport getParams from './functions/getParams';\nimport {GoogleApiWrapper} from 'google-maps-react';\nimport $ from 'jquery';\n\nimport MapMain from \"./components/MapMain\";\nimport AreaGroupMain from \"./components/areaData/groupMain\";\n\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\n\nimport mapStyle from \"./const/mapStyle\";\nimport polygons from \"./const/polygon\";\nimport AreaGroupPolitics from \"./components/areaData/groupPolitics\";\nimport AreaGroupActions from \"./components/areaData/groupActions\";\nimport UserHeaderContent from \"./components/UserHeaderContent\";\nimport DiversionPanel from \"./components/DiversionPanel\";\nimport AreaGroupHistory from \"./components/areaData/groupHistrory\";\nimport SpeechPanel from \"./components/SpeechPanel\";\nimport LawsPanel from \"./components/LawsPanel\";\nimport TradePanel from \"./components/TradePanel\";\nimport ProductionPanel from \"./components/ProductionPanel\";\nimport WarehousePanel from \"./components/WarehousePanel\";\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeView: 'main',\n            activePanel: 'main',\n            VK_UID: 0,\n            userData: {\n                id: 0,\n                warPoints: 0,\n                points: []\n            },\n            popout: '',\n            modal: '',\n            snackbar: '',\n            contextOpened: false,\n            center: {\n                lat: 54.779270,\n                lng: 56.123964\n            },\n            zoom: 14,\n            areas: [],\n            users: [],\n            activeArea: 0\n        };\n        this.openPanel = this.openPanel.bind(this);\n        this.openCaptureModal = this.openCaptureModal.bind(this);\n        this.polyClick = this.polyClick.bind(this);\n        this.onDragged = this.onDragged.bind(this);\n        this.toggleContext = this.toggleContext.bind(this);\n    }\n    componentDidMount() {\n        this.setState({VK_UID: getParams('vk_user_id')});\n        bridge.send(\"VKWebAppInit\", {}).then(() => console.log('ВК ПОДКЛЮЧЕН')).catch(() => {window.location.reload()});\n        checkUserExists(getParams('vk_user_id')).then(\n            () => {\n                let dataCol = fire.firestore().collection('data');\n                // fire.firestore().collection('users').doc(getParams('vk_user_id').toString()).onSnapshot(listener => {\n                //     this.setState({\n                //         userData: listener.data()\n                //     });\n                // });\n                dataCol.doc('areas').onSnapshot(listener => {\n                    if(listener.data()){\n                        this.setState({\n                            areas: listener.data().main\n                        });\n                    }\n                });\n                dataCol.doc('users').onSnapshot(listener => {\n                    if(listener.data()){\n                        let d = listener.data().main;\n                        let q = [];\n                        // eslint-disable-next-line no-unused-vars\n                        for (const [key, value] of Object.entries(d)) {\n                            q.push(key.substr(1));\n                        }\n                        let w = q.join(',');\n                        bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7446907, \"scope\": \"\"}).then(\n                            v => bridge.send(\"VKWebAppCallAPIMethod\", {\"method\": \"users.get\", \"request_id\": \"32test\", \"params\": {\"fields\":\"photo_200\", \"user_ids\": w, \"v\":\"5.110\", \"access_token\":v.access_token}}).then(\n                                v => {\n                                    let re;\n                                    for(let i = 0; i < v.response.length; i++){\n                                        re = v.response[i];\n                                        d['U'+re.id].photo_200 = re.photo_200;\n                                        d['U'+re.id].first_name = re.first_name;\n                                        d['U'+re.id].last_name = re.last_name;\n                                        if(re.id === parseInt(getParams('vk_user_id'))){\n                                           //...\n                                        }\n                                    }\n                                    this.setState({\n                                        users: d\n                                    })\n                                }\n                            )\n                        );\n                    }\n                });\n            }\n        );\n    }\n    componentWillUnmount() {\n\n    }\n\n    openPanel(panel){\n        this.setState({\n            activePanel: panel\n        })\n    }\n    openView(view){\n        this.setState({\n            activeView: view\n        })\n    }\n    toggleContext(){\n        this.setState({ contextOpened: !this.state.contextOpened });\n    }\n\n    removeIcons(mapProps, map){\n        map.setOptions({\n            styles: mapStyle\n        });\n        $('.map').css('height', $(window).height() - $('.PanelHeader').height());\n    }\n    openCaptureModal(data){\n\n    }\n    onDragged(mapProps, map){\n        this.setState({\n            center: {lat: map.center.lat(), lng: map.center.lng()},\n            zoom: map.zoom\n        });\n    }\n    polyClick(area){\n        this.openPanel('area');\n        this.setState({activeArea: area});\n    }\n\n    render() {\n        let user = this.state.users['U'+getParams('vk_user_id')];\n        let curArea = this.state.activeArea;\n        return (\n            <Root activeView={this.state.activeView}>\n                <View popout={this.state.popout} id=\"main\" activePanel={this.state.activePanel}>\n                    <Panel id=\"main\">\n                        <PanelHeader>\n                            <PanelHeaderContent\n                                aside={<Icon16Dropdown style={{ transform: `rotate(${this.state.contextOpened ? '180deg' : '0'})` }} />}\n                                onClick={this.toggleContext} before={''} status={''}>\n                                БИТВА ЗА ИНОРС\n                            </PanelHeaderContent>\n                        </PanelHeader>\n                        <PanelHeaderContext opened={this.state.contextOpened} onClose={this.toggleContext}>\n                            <UserHeaderContent areas={this.state.areas} polyClick={this.polyClick} user={user}/>\n                        </PanelHeaderContext>\n                        <MapMain\n                            areas={this.state.areas}\n                            users={this.state.users}\n                            center={this.state.center}\n                            removeIcons={this.removeIcons}\n                            google={this.props.google}\n                            points={this.state.points}\n                            markerClick={this.markerClick}\n                            zoom={this.state.zoom}\n                            polyClick={this.polyClick}\n                            onDragged={this.onDragged}\n                            polygons={polygons}\n                        />\n                        {this.state.snackbar}\n                    </Panel>\n                    <Panel id=\"area\">\n                        {this.state.areas.length ? (\n                            <div>\n                                <PanelHeader left={<PanelHeaderBack onClick={() => {\n                                    this.openPanel('main')}}/>}>\n                                    {this.state.areas[curArea].name}\n                                </PanelHeader>\n                                <AreaGroupMain users={this.state.users} areas={this.state.areas} curArea={curArea}/>\n                                <AreaGroupPolitics areas={this.state.areas} curArea={curArea}/>\n                                <AreaGroupActions openPanel={this.openPanel} areas={this.state.areas} curArea={curArea}/>\n                                <AreaGroupHistory areas={this.state.areas} curArea={curArea}/>\n                            </div>\n                        ) : ''}\n                    </Panel>\n                    <Panel id=\"diversion\">\n                        <DiversionPanel areas={this.state.areas} curArea={curArea} user={user} users={this.state.users} openPanel={this.openPanel}/>\n                    </Panel>\n                    <Panel id=\"speech\">\n                        <SpeechPanel areas={this.state.areas} curArea={curArea} user={user} users={this.state.users} openPanel={this.openPanel}/>\n                    </Panel>\n                    <Panel id=\"laws\">\n                        <LawsPanel areas={this.state.areas} curArea={curArea} user={user} users={this.state.users} openPanel={this.openPanel}/>\n                    </Panel>\n                    <Panel id=\"trade\">\n                        <TradePanel areas={this.state.areas} curArea={curArea} user={user} users={this.state.users} openPanel={this.openPanel}/>\n                    </Panel>\n                    <Panel id=\"production\">\n                        <ProductionPanel areas={this.state.areas} curArea={curArea} user={user} users={this.state.users} openPanel={this.openPanel}/>\n                    </Panel>\n                    <Panel id=\"warehouse\">\n                        <WarehousePanel/>\n                    </Panel>\n                </View>\n            </Root>\n        );\n    }\n}\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyC2L8vPYtDn5Csq-7Gj9sZqSzvb3Bx1QfI\")\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pv.910d5316.png\";"],"sourceRoot":""}