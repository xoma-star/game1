{"version":3,"sources":["components/Typing.jsx","components/Message.js","components/MessagesBlock.js","functions/firebase.js","functions/checkUserExist.js","App.js","serviceWorker.js","index.js"],"names":["Typing","e","typing","style","position","top","className","Message","message","sent","text","MessagesBlock","props","state","data","this","messages","length","map","v","key","max","Math","floor","random","stretched","React","Component","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","checkUserExists","id","a","newUserData","balance","hero","firestore","collection","doc","toString","get","then","r","exists","set","console","log","App","activeView","activePanel","userDataVK","userData","farm","messageValue","openPanel","bind","updateMessage","i","addMessage","bridge","send","z","setState","x","onSnapshot","listener","panel","view","target","value","prevState","setTimeout","separator","left","onClick","window","history","back","right","color","status","before","size","src","fontWeight","display","margin","backgroundColor","vertical","width","height","onChange","maxLength","placeholder","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e9911a1b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Typing = (e) => {\r\n    return (\r\n        <div>\r\n            {e.typing ? (\r\n                <div>\r\n                    <span style={{position: 'relative', top: 1}}>печатает</span>\r\n                    <div className=\"typing__loading Loading\">\r\n                        <div className=\"Loading__items\">\r\n                            <div className=\"Loading__item Loading__item_0\"></div>\r\n                            <div className=\"Loading__item Loading__item_1\"></div>\r\n                            <div className=\"Loading__item Loading__item_2\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <span>был в сети недавно</span>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Typing;","import React from \"react\";\r\n\r\nconst Message = (e) => {\r\n    return (\r\n        <div className={`message ${e.message.sent ? 'sent' : 'received'}`}><span>{e.message.text}<div className=\"messageDate\">12.34</div></span></div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Placeholder} from \"@vkontakte/vkui\";\r\nimport Message from \"./Message\";\r\n\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nclass MessagesBlock extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.props.data;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                this.props.data.messages.length ?\r\n                    (<div className=\"messageWrap\"\r\n                          // style={{paddingTop: 'calc(100vh - 114px - '+this.props.data.messages.length*52+'px)'}}\r\n                    >\r\n                        <div className=\"messages\">\r\n                            {this.props.data.messages.map(v => <Message key={getRandomInt(26789)+v.text} message={v}/>)}\r\n                        </div>\r\n                    </div>) :\r\n                    (<Placeholder stretched><b>Пока нет сообщений</b><br/>Начните общаться!</Placeholder>)\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessagesBlock;","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCU3lAPlsxkBORPy2HQfCdayJNIIh0PrV4\",\r\n    authDomain: \"game1-cae49.firebaseapp.com\",\r\n    databaseURL: \"https://game1-cae49.firebaseio.com\",\r\n    projectId: \"game1-cae49\",\r\n    storageBucket: \"game1-cae49.appspot.com\",\r\n    messagingSenderId: \"691468574984\",\r\n    appId: \"1:691468574984:web:1c76454a2ec3020e820cbd\",\r\n    measurementId: \"G-1B23MNQTH4\"\r\n};\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default fire;","import fire from \"./firebase\";\r\nconst checkUserExists = async (id) => {\r\n    const newUserData = {\r\n        id: id,\r\n        balance: 0,\r\n        hero: 0\r\n    }\r\n    fire.firestore().collection('users').doc(id.toString()).get().then(\r\n        r => {\r\n            if(!r.exists){\r\n                fire.firestore().collection('users').doc(id.toString()).set(newUserData).then(\r\n                    r => console.log('Created user...')\r\n                );\r\n            }\r\n        }\r\n    );\r\n    return true;\r\n}\r\nexport default checkUserExists;","import React from 'react';\nimport './App.css';\nimport {\n    Panel,\n    PanelHeader,\n    PanelHeaderBack,\n    View,\n    Root,\n    SimpleCell,\n    PanelHeaderClose,\n    Header,\n    Button, PanelHeaderButton, PanelHeaderContent, Avatar, FixedLayout, Div, Separator, Input, Placeholder\n} from \"@vkontakte/vkui\";\nimport Typing from \"./components/Typing\";\nimport MessagesBlock from \"./components/MessagesBlock\";\nimport '@vkontakte/vkui/dist/vkui.css';\nimport fire from './functions/firebase';\nimport checkUserExists from './functions/checkUserExist';\nimport bridge from '@vkontakte/vk-bridge';\nimport Icon28ArrowLeftOutline from '@vkontakte/icons/dist/28/arrow_left_outline';\nimport Icon28PhoneOutline from '@vkontakte/icons/dist/28/phone_outline';\nimport Icon28AttachOutline from '@vkontakte/icons/dist/28/attach_outline';\nimport Icon24SmileOutline from '@vkontakte/icons/dist/24/smile_outline';\nimport Icon28VoiceOutline from '@vkontakte/icons/dist/28/voice_outline';\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\n\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeView: 'main',\n            activePanel: 'main',\n            userDataVK: {},\n            userData: {},\n            farm: {\n                activePanel: 'main'\n            },\n            messages: [],\n            typing: false,\n            messageValue: ''\n        };\n        this.openPanel = this.openPanel.bind(this);\n        this.updateMessage = this.updateMessage.bind(this);\n    }\n    componentDidMount() {\n        for (let i = 0; i < 5; i++){\n            this.addMessage('qq', i%2);\n        }\n        bridge.send(\"VKWebAppInit\", {})\n            .then(\n                r => bridge.send(\"VKWebAppGetUserInfo\", {})\n                    .then(\n                        z => {\n                            this.setState({\n                                userDataVK: z\n                            });\n                            checkUserExists(z.id).then(\n                                x => {\n                                    fire.firestore().collection('users').doc(z.id.toString()).onSnapshot(listener => {\n                                        this.setState({\n                                            userData: listener.data()\n                                        });\n                                        console.log(this.state);\n                                    });\n                                }\n                            );\n                        }\n                    )\n            );\n    }\n    componentWillUnmount() {\n\n    }\n    openPanel(panel){\n        this.setState({\n            activePanel: panel\n        })\n    }\n    openView(view){\n        this.setState({\n            activeView: view\n        })\n    }\n    updateMessage(e){\n        this.setState({\n            messageValue: e.target.value\n        })\n    }\n    addMessage(text, sent){\n        if(!sent){\n            setTimeout(() => {\n                this.setState({\n                    typing: true\n                });\n                setTimeout(() => {\n                    this.setState(prevState => ({\n                        messages: [...prevState.messages, {text: text, sent: sent}],\n                        typing: false\n                    }))\n                }, 2000);\n            }, 1000)\n        }\n        else{\n            this.setState(prevState => ({\n                messages: [...prevState.messages, {text: text, sent: sent}]\n            }));\n        }\n    }\n    render() {\n        return (\n            <Root activeView={this.state.activeView}>\n                <View id=\"main\" activePanel={this.state.activePanel}>\n                    <Panel id=\"main\">\n                        <PanelHeader\n                            separator={false}\n                            left={<PanelHeaderButton onClick={() => {window.history.back()}}><Icon28ArrowLeftOutline/></PanelHeaderButton>}\n                            right={<PanelHeaderButton><Icon28PhoneOutline style={{color: 'var(--button_muted_foreground)'}}/></PanelHeaderButton>}\n                            //style={{boxShadow: '0px 1px 5px 0px rgba(0, 0, 0, 0.3)'}}\n                        >\n                            <PanelHeaderContent\n                                status={<Typing typing={this.state.typing}/>}\n                                before={<Avatar size={36} src=\"https://vk.com/images/camera_100.png\" />}\n                            >\n                                <span style={{fontWeight: \"bold\"}}>DELETED<Icon16Dropdown style={{color: 'var(--attach_picker_tab_inactive_icon)', display: \"inline-block\", margin: \"4px 0 0 3px\"}}/></span>\n                            </PanelHeaderContent>\n                        </PanelHeader>\n                        <MessagesBlock data={this.state}/>\n                        <FixedLayout style={{backgroundColor: '#FFFFFF'}} vertical=\"bottom\">\n                            <Separator/>\n                            <Div>\n                                <Icon28AttachOutline width={28} height={28} style={{color: 'var(--attach_picker_tab_inactive_icon)', display: \"inline-block\"}}/>\n                                <input value={this.state.messageValue} onChange={this.updateMessage} maxLength={32} className=\"messageInput\" placeholder=\"Сообщение\"/>\n                                <Icon24SmileOutline width={28} height={28} style={{color: 'var(--attach_picker_tab_inactive_icon)', display: \"inline-block\", margin: \"0 5px\"}}/>\n                                <Icon28VoiceOutline width={28} height={28} style={{color: 'var(--attach_picker_tab_inactive_icon)', display: \"inline-block\"}}/>\n                            </Div>\n                        </FixedLayout>\n                    </Panel>\n                </View>\n            </Root>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}